{"version":3,"sources":["cmps/Header.js","services/UtilsService.js","services/ContactService.js","services/UserService.js","store/user/UserActions.js","cmps/Scroll.js","cmps/MovePreview.js","cmps/MovesList.js","services/BitcoinService.js","views/HomePage.js","cmps/StatisticPage.js","store/contact/ContactActions.js","cmps/ContactPreview.js","cmps/ContactList.js","cmps/ContactFilter.js","views/ContactPage.js","views/SignUpPage.js","cmps/TransferFund.js","views/‏‏ContactDetailsPage.js","views/ContactEditPage.js","Router.js","App.js","store/user/UserReducers.js","store/contact/ContactReducers.js","store/Store.js","serviceWorker.js","index.js"],"names":["Header","state","isOnline","handleConnectionChange","setState","navigator","onLine","this","window","addEventListener","removeEventListener","className","to","React","Component","saveToStorage","key","value","localStorage","setItem","JSON","stringify","loadFromStorage","parse","getItem","_makeId","length","txt","possible","i","charAt","Math","floor","random","CONTACTS_KEY","getContacts","filterBy","Promise","resolve","reject","contactsToReturn","contacts","term","filter","sort","a","b","name","toLocaleLowerCase","getContactById","id","contact","find","_id","removeContact","idx","findIndex","splice","UtilsService","saveContact","c","_updateContact","unshift","_addContact","getEmptyContact","email","phone","createContacts","resetContacts","clear","copyContacts","includes","USER_KEY","getLoggedUser","user","signUp","userName","coins","moves","toId","at","amount","signout","ContactService","UserActions","console","log","addMove","newMove","Date","movesByContact","move","_setUser","type","_getMoves","dispatch","async","UserService","loadMoves","getMoves","Scroll","props","style","overflowY","border","height","width","children","MovePreview","btcToUsdRate","dateToFormat","toUpperCase","substring","parseInt","toLocaleString","MoveList","title","map","getMarketPrice","marketPrice","axios","get","marketPriceY","data","values","price","y","btcToUsd","rate","USD","last","formatNumber","num","toString","replace","getConfirmedTransactions","transections","transectionsY","HomePage","history","push","itemsSlice","items","slice","upperCaseFirstLetter","BitcoinService","onClick","fill","fillOpacity","MovesList","mapDispatchToProps","connect","currUser","StatisticPage","transectionsPrice","labels","datasets","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","ref","setContacts","setCurrContact","currContact","removeCurrContact","updateContacts","loadContacts","loadCurrContact","savedContact","ContactPreview","src","alt","ContactList","ContactFilter","onFilter","placeholder","onChange","ev","target","ContactPage","contactsToShow","ContactActions","signUpPage","saveUser","preventDefault","Object","updateUser","field","prevState","onSubmit","required","TransferFund","msg","onInputChange","maxCoins","onUserSend","onTransferCoins","setTimeout","inputAmount","el","ContactDetailsPage","moveListFilter","match","params","BitCoinService","onRemoveContact","onResetInputs","onSaveContact","Router","exact","path","component","SignUpPage","ContactEditPage","App","INITIAL_STATE","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","createBrowserHistory","ReactDOM","render","Store","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","e","prompt"],"mappings":"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","file":"static/js/main.f38f2a14.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        isOnline: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleConnectionChange();\r\n        window.addEventListener('online', this.handleConnectionChange);\r\n        window.addEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('online', this.handleConnectionChange);\r\n        window.removeEventListener('offline', this.handleConnectionChange);\r\n    }\r\n\r\n    handleConnectionChange = () => {\r\n        this.setState({ isOnline: navigator.onLine });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"header\">\r\n                <Link to=\"/\"><h1>MR. BitCoin</h1></Link>\r\n                <ul className=\"nav-bar\">\r\n                    {!this.state.isOnline ? <li className=\"offline-icon \"><i className=\"  fas fa-globe\"></i>\r\n                        <span className=\"live-txt red\"> OffLine</span></li>\r\n                        :\r\n                        <li className=\"online-icon \"><i className=\" fas fa-globe icon-txt\"></i>\r\n                            <span className=\"live-txt\"> OnLine</span></li>\r\n                    }\r\n                    <li><Link to=\"/contact\"><i className=\"fas fa-users icon\"></i> </Link></li>\r\n                    <li><Link to=\"/statistic\"><i className=\"far fa-chart-bar icon\"></i> </Link></li>\r\n                </ul>\r\n            </section>)\r\n    }\r\n\r\n}\r\nexport default Header;","export default {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n    _makeId\r\n}\r\n\r\nfunction saveToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n}\r\nfunction loadFromStorage(key) {\r\n    return JSON.parse(localStorage.getItem(key))\r\n}\r\nfunction _makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n}\r\n// function indexOf(items, item pos=0){\r\n//     var count = 0;\r\n//     items.some((currItem, idx) => {\r\n//         (currItem===item)? \r\n//     });\r\n//     return count;s\r\n// }","import UtilsService from './UtilsService'\n\nconst CONTACTS_KEY = 'contacts'\n\nexport default {\n  getContacts,\n  getContactById,\n  removeContact,\n  saveContact,\n  getEmptyContact,\n  filter,\n  createContacts,\n  resetContacts\n}\n\nfunction createContacts(){\n  let contactFromStorage = UtilsService.loadFromStorage(CONTACTS_KEY)\n  if(!contactFromStorage){\n    UtilsService.saveToStorage(CONTACTS_KEY, contacts);\n  } \n  else contacts = UtilsService.loadFromStorage(CONTACTS_KEY)\n}\n\nfunction resetContacts(){\n  localStorage.clear();\n  contacts = copyContacts\n  createContacts()\n}\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction removeContact(id) {\n  return new Promise((resolve, reject) => { \n    const idx = contacts.findIndex( contact => {\n      return contact._id === id.id\n    })\n    if (idx !== -1) {\n      contacts.splice(idx, 1)\n    }\n    UtilsService.saveToStorage(CONTACTS_KEY, contacts);\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const idx = contacts.findIndex( c => {\n      return contact._id === c._id\n    })\n    if (idx !== -1) {\n      contacts[idx] = contact\n    }\n    UtilsService.saveToStorage(CONTACTS_KEY, contacts);\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = UtilsService._makeId()\n    contacts.unshift(contact)\n    UtilsService.saveToStorage(CONTACTS_KEY, contacts);\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nlet contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\nconst copyContacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\ncreateContacts()","import UtilsService from './UtilsService'\r\nimport ContactService from './ContactService'\r\nimport UserActions from '../store/user/UserActions'\r\n\r\nconst USER_KEY = 'user'\r\n\r\nexport default {\r\n    getLoggedUser,\r\n    signUp,\r\n    signout,\r\n    addMove,\r\n    movesByContact,\r\n    // getMoves\r\n}\r\n\r\nfunction signUp(userName){\r\n    const user = { \r\n        name: userName,\r\n        coins: 100,\r\n        moves: [{toId: 'dgdrghd5r3', to: 'Holder Bean', at: 1577562128480, amount: 10},\r\n        {toId: 'dgdrghd5r3', to: 'Parsons Norris', at: 1577562128480, amount: 21},\r\n        {toId: 'dgdrghd5r3', to: 'Dominique Soto', at: 1577562128480, amount: 9}],\r\n        _id: UtilsService._makeId()\r\n    }\r\n    UtilsService.saveToStorage(USER_KEY, user);\r\n    return user;\r\n}\r\nfunction signout(){\r\n        ContactService.resetContacts()\r\n        UserActions.getLoggedUser()//todo remove user from state\r\n        return Promise.resolve(console.log('signout successfully'))\r\n}\r\nfunction addMove(contact, amount){\r\n    const user = UtilsService.loadFromStorage(USER_KEY) \r\n    const newMove = {\r\n        toId: contact._id,\r\n        to: contact.name,\r\n        at: new Date(),\r\n        amount\r\n    }\r\n    user.moves.unshift(newMove)\r\n    user.coins -= amount\r\n    UtilsService.saveToStorage(USER_KEY, user);\r\n    return user;\r\n}\r\n\r\nfunction getLoggedUser() { \r\n    const user = UtilsService.loadFromStorage(USER_KEY) \r\n    return (!user)? null : user;\r\n}\r\n\r\nfunction movesByContact(id){\r\n    const user = UtilsService.loadFromStorage(USER_KEY) \r\n    const moves = user.moves.filter(move => move.toId ===id)\r\n    return moves;\r\n}\r\n\r\n// function getMoves(){\r\n//     const user = UtilsService.loadFromStorage(USER_KEY) \r\n//     return user.moves\r\n// }","import UserService from '../../services/UserService'\r\n\r\n\r\nconst getLoggedUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getLoggedUser()\r\n        return dispatch(_setUser(user))\r\n    }\r\n}\r\n\r\nconst loadMoves = (id=null) =>{\r\n    return async (dispatch) => {\r\n        const moves = (id)? await UserService.movesByContact(id) : await UserService.getMoves()\r\n        return dispatch(_getMoves(moves))\r\n    }\r\n}\r\n\r\nconst addMove = (contact, amount) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.addMove(contact, amount)\r\n        return dispatch(_setUser(user))\r\n    }\r\n}\r\n\r\nconst _setUser = (user) => {\r\n    return { type: 'SET_CURR_USER', user }\r\n}\r\n\r\nconst _getMoves = (moves) =>{\r\n    return {type : 'GET_MOVES', moves }\r\n}\r\n\r\nconst signUp = (userName) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.signUp(userName)\r\n        return dispatch(_setUser(user))\r\n    }\r\n}\r\n\r\nconst signout = () => {\r\n    return async (dispatch) => {\r\n        await UserService.signout()\r\n        return dispatch(_setUser(null))\r\n    }\r\n}\r\nexport default {\r\n    getLoggedUser,\r\n    signUp,\r\n    addMove,\r\n    loadMoves,\r\n    signout\r\n}","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border: '0px solid black', height: props.height ,width: '100%'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nconst MovePreview = ({move, btcToUsdRate}) => {\r\n    const dateToFormat = (move.at);\r\n    return (\r\n        <div className=\"move-preview\" >\r\n            <div className=\"trans-from\">To {move.to.charAt(0).toUpperCase()+move.to.substring(1,move.to.length)}</div>\r\n            <div className=\"trans-amount\">B {move.amount} | <span className=\"usd-amount\">$ {parseInt(btcToUsdRate*move.amount).toLocaleString('en')}</span></div>\r\n            <div className=\"stat\">status : <span className=\"stat-opt\">approve</span></div>\r\n            <div className=\"sent-at\"><Moment>{dateToFormat}</Moment></div>\r\n        </div>\r\n    )\r\n}\r\nexport default MovePreview;","import React from 'react';\r\nimport Scroll from '../cmps/Scroll'\r\nimport MovePreview from './MovePreview'\r\n\r\n\r\nconst MoveList = ({moves, btcToUsdRate, title}) => {\r\n    if(moves.length === 0) {\r\n        return (\r\n            <ul className=\"moves-list-container\" >\r\n                <div className=\"last-moves\">{title}</div>\r\n                <div className=\"no-moves-msg\">No moves to show</div>\r\n            </ul>)\r\n    } else{\r\n       return (\r\n            <ul className=\"moves-list-container\" >\r\n                <div className=\"last-moves\">{title}</div>\r\n                <Scroll height={'150px'}>\r\n                    {moves.map((move, idx) => {\r\n                        return (<li key={idx}><MovePreview move={move} btcToUsdRate={btcToUsdRate} /></li>)\r\n                    })}\r\n                </Scroll>\r\n            </ul>)\r\n    }\r\n}\r\nexport default MoveList;","import axios from 'axios'\r\n\r\nexport default {\r\n    getMarketPrice,\r\n    btcToUsd,\r\n    formatNumber,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function btcToUsd(){\r\n    var rate = JSON.parse(localStorage.getItem('btcToUsd'))   \r\n    if(!rate){\r\n        try{\r\n            rate = await axios.get(`https://blockchain.info/ticker`)\r\n            localStorage.setItem('btcToUsd', JSON.stringify(rate.data.USD.last))\r\n            return rate.data.USD.last;\r\n    } catch(err){\r\n            console.log('Err: bitcoinService.js'+err);\r\n            throw (err)\r\n        }\r\n    }\r\n    return rate;    \r\n}\r\nfunction formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nasync function getConfirmedTransactions(){\r\nvar transections = JSON.parse(localStorage.getItem('transections'))   \r\nif(!transections){\r\n    try{\r\n        transections = await axios.get(`https://api.blockchain.info/charts/market-price?timespan=12months&format=json&cors=true`)\r\n        const transectionsY = transections.data.values.map(price=>price.y)\r\n        localStorage.setItem('transections', JSON.stringify(transectionsY))\r\n        return transectionsY;  \r\n    } catch(err) {\r\n            console.log('Err: bitcoinService.js '+err);\r\n            throw (err)\r\n        }  \r\n    }\r\n    return transections;    \r\n}\r\n\r\n\r\nasync function getMarketPrice(){\r\n    var marketPrice = JSON.parse(localStorage.getItem('marketPrice'))   \r\n    if(!marketPrice){\r\n        try{\r\n            marketPrice = await axios.get(`https://api.blockchain.info/charts/market-price?timespan=1months&format=json&cors=true`)\r\n            const marketPriceY = marketPrice.data.values.map(price =>price.y)\r\n            localStorage.setItem('marketPrice', JSON.stringify(marketPriceY))\r\n        return marketPriceY;\r\n    } catch(err) {\r\n            console.log('Err: bitcoinService.js '+err);\r\n            throw (err)\r\n        }  \r\n    }\r\n    return marketPrice; \r\n    \r\n    \r\n}\r\n// async function getRate(coins){\r\n//     var bitCoinsRate = JSON.parse(localStorage.getItem('chart'))   \r\n//     if(!bitCoinsRate){\r\n//         try{\r\n//         bitCoinsRate = await axios.get(`https://blockchain.info/tobtc?currency=${coins}&value=1`)\r\n//         localStorage.setItem('chart', JSON.stringify(bitCoinsRate))\r\n//         } catch(err) {\r\n//             console.log('Err: bitcoinService.js'+err);\r\n//         }\r\n//     }\r\n//     return bitCoinsRate.data;    \r\n// }","import UserActions from '../store/user/UserActions'\r\nimport React, {Component} from 'react';\r\nimport MovesList from '../cmps/MovesList'\r\nimport BitcoinService from '../services/BitcoinService'\r\nimport {Link} from 'react-router-dom'\r\nimport { Sparklines, SparklinesLine, SparklinesBars, SparklinesSpots } from 'react-sparklines';\r\nimport { connect } from 'react-redux'\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        btcToUsdRate: null,\r\n        marketPrice: []\r\n    }\r\n    async componentDidMount(){\r\n        await this.props.getLoggedUser()\r\n        if (!this.props.user) this.props.history.push('/signup')\r\n        else {\r\n            try{\r\n                const btcToUsdRate = await BitcoinService.btcToUsd()\r\n                this.setState({btcToUsdRate})\r\n            } catch (err) {console.log(err)}\r\n            try{\r\n                const marketPrice = await BitcoinService.getMarketPrice()\r\n                this.setState({marketPrice})\r\n            } catch (err) {console.log(err)}\r\n        }\r\n    }\r\n    signout = async () =>{\r\n        await this.props.signout()\r\n        this.props.history.push('/signup')\r\n    }\r\n    itemsSlice = (items) => {\r\n        return items.slice(0,3)\r\n    }\r\n    upperCaseFirstLetter = (name) =>{\r\n        return name.charAt(0).toUpperCase()+name.substring(1,name.length)\r\n    }\r\n    render(){\r\n        const {user} = this.props;\r\n        const {btcToUsdRate} = this.state;\r\n        const {marketPrice} = this.state;\r\n        return( \r\n            <>\r\n            {user && <section className=\"home-container container\">\r\n                <div className=\"name-container\">\r\n                    <h1>Hi, {this.upperCaseFirstLetter(user.name)}</h1>\r\n                    <div className=\"logout-btn\" onClick={this.signout}>< i className=\"fas fa-sign-out-alt\"></i></div>\r\n                </div>\r\n                <hr className=\"user-name-line\"/>\r\n                <div className=\"balance-container\">\r\n                    <div className=\"curr-balance\">\r\n                        <div className=\"title\">CURRENT BALANCE</div>\r\n                        <h2>BIT: <span className=\"bit-amount\">B {user.coins}</span></h2>\r\n                        {btcToUsdRate && <h2>USD: <span className=\"usd-amount\">${parseInt(user.coins*btcToUsdRate).toLocaleString('en')}</span></h2>}\r\n                    </div>\r\n                    <div className=\"curr-btc\">\r\n                        <div className=\"title\">CURRENT BTC USD</div>\r\n                         {btcToUsdRate && <h2 className=\"amount\">$ {parseInt(btcToUsdRate).toLocaleString('en')}</h2>}\r\n                         {!btcToUsdRate && <h2 className=\"amount\">N/A</h2>}\r\n                    </div>\r\n                </div>\r\n                {marketPrice && <Sparklines data={marketPrice}>\r\n                    <SparklinesLine style={{ fill: \"none\" }} />\r\n                    <SparklinesBars style={{ fill: 'slategray', fillOpacity: \".5\" }} />\r\n                    <SparklinesSpots />\r\n                </Sparklines>}\r\n                <Link to={`/statistic`} >\r\n                    <h4 className=\"stat-btn\">See full statistic</h4>\r\n                </Link>\r\n                <hr className=\"user-name-line\"/>\r\n                <MovesList title={'Last 3 moves'} moves={this.itemsSlice(user.moves)} btcToUsdRate={btcToUsdRate} />\r\n                </section>}\r\n                </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedUser: UserActions.getLoggedUser,\r\n    signout: UserActions.signout,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage)","import React, {Component} from 'react';\r\nimport { Sparklines,SparklinesBars, SparklinesLine, SparklinesSpots  } from 'react-sparklines';\r\nimport BitcoinService from '../services/BitcoinService'\r\nimport { Line } from 'react-chartjs-2';\r\nexport default class StatisticPage extends Component {\r\n    state = {\r\n         marketPrice : [],\r\n         transectionsPrice : []\r\n    }\r\n    async componentDidMount(){\r\n        try{\r\n            let marketPrice = await BitcoinService.getMarketPrice()\r\n            this.setState({marketPrice})\r\n        } catch (err) {console.log(err)}\r\n        try{\r\n            let transectionsPrice = await BitcoinService.getConfirmedTransactions()\r\n            this.setState({transectionsPrice})\r\n        } catch (err) {console.log(err)}\r\n    }\r\n    render(){\r\n    const data = {\r\n        labels: [1,2,3,4,5,6,7,8,9,10,11,12],\r\n        datasets: [\r\n            {\r\n            label: 'Price',\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 5,\r\n            data: this.state.transectionsPrice\r\n            }\r\n        ]\r\n        };\r\n        const {marketPrice} = this.state\r\n        return ( \r\n        <section className=\"statistic-page container\">\r\n            <h1>Market Trends 2020</h1>\r\n            {(marketPrice)?<Sparklines data={marketPrice}>\r\n                <SparklinesLine style={{ fill: \"none\" }} />\r\n                <SparklinesSpots />\r\n                <SparklinesBars style={{ fill: 'slategray', fillOpacity: \".5\" }} />\r\n            </Sparklines>: <h2>N/A</h2>}\r\n            <hr className=\"user-name-line\"/>\r\n            <h2>Confirmed Transections/ Month</h2>\r\n            <Line ref=\"chart\" data={data} />\r\n        </section>)\r\n    }\r\n}","import ContactService from '../../services/ContactService'\r\n\r\nconst loadContacts = () => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts()\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst removeContact = (id) => {\r\n    return async (dispatch) => {\r\n        await ContactService.removeContact(id)\r\n        return dispatch(removeCurrContact())\r\n    }\r\n}\r\n\r\nconst saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact)\r\n        return dispatch(updateContacts(savedContact))\r\n    }\r\n}\r\n\r\nconst setContacts = contacts => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\nconst setCurrContact = currContact => {\r\n    return { type: 'SET_CURR_CONTACT', currContact }\r\n}\r\n\r\nconst removeCurrContact = () => {\r\n    return { type: 'REMOVE_CONTACT'}\r\n}\r\n\r\nconst updateContacts = (contact) => {\r\n    return { type: 'UPDATE_CONTACTS',contact}\r\n}\r\n\r\nexport default {\r\n    loadContacts,\r\n    loadCurrContact,\r\n    removeContact,\r\n    saveContact,\r\n}","import React from 'react';\r\n\r\nconst ContactPreview = ({contact}) => {\r\n    return (\r\n        <div className=\"contact-preview\">\r\n            <img src={`https://robohash.org/${contact._id}`} alt=\"\"/>\r\n            <div className=\"contact-details\">\r\n                <h1 className=\"name\">{contact.name}</h1>\r\n                <div className=\"phone\">{contact.phone}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ContactPreview;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport ContactPreview from './ContactPreview'\r\n\r\n\r\nconst ContactList = ({contacts}) => {\r\n    return (<ul className=\"contact-list-container\">\r\n        {contacts.map((contact, idx) => {\r\n            return (               \r\n                <Link to={`/contact/${contact._id}`} key={idx}>\r\n                    <ContactPreview contact={contact} />\r\n                </Link>\r\n            )\r\n        })}\r\n    </ul>)\r\n}\r\nexport default ContactList;","import React from 'react';\r\n\r\nconst ContactFilter = ({onFilter}) => {\r\n    return (\r\n        <input \r\n        className=\"contact-filter\"\r\n        type=\"search\"\r\n        placeholder = \"Enter name / number\"\r\n        onChange={(ev) => onFilter(ev.target.value)} />\r\n    )\r\n}\r\n\r\nexport default ContactFilter","import React, {Component} from 'react';\r\nimport ContactActions from '../store/contact/ContactActions'\r\nimport UserActions from '../store/user/UserActions'\r\nimport ContactList from '../cmps/ContactList'\r\nimport ContactFilter from '../cmps/ContactFilter'\r\nimport {Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Scroll from '../cmps/Scroll'\r\nimport ContactService from '../services/ContactService';\r\n\r\nclass ContactPage extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter:null\r\n    }\r\n    async componentDidMount() {\r\n        await this.props.getLoggedUser()\r\n        await this.props.loadContacts()\r\n        if (!this.props.user) this.props.history.push('/signup')\r\n    }\r\n    onFilter = async (ev) => {\r\n        let filter = {};\r\n        filter.term = ev;\r\n        this.setState({filter:filter.term})\r\n    }\r\n    render() {\r\n        const { filter } = this.state\r\n        const { contacts } = this.props\r\n        let contactsToShow = (!filter)? contacts: ContactService.filter(this.state.filter)\r\n        return (\r\n            contacts && <section className=\"contact-page container\">\r\n                <div className=\"btns-nav-container\">\r\n                    <Link to={'/'}>\r\n                    <div className=\"link\"><i className=\"fas fa-arrow-left\"></i></div></Link>\r\n                </div>\r\n                <h1>Contacts</h1>\r\n                <span>Search in contacts</span>\r\n                <ContactFilter onFilter={this.onFilter} />\r\n                <hr className=\"user-name-line\"/>\r\n                <Scroll height={'380px'}>\r\n                    <ContactList contacts={contactsToShow}/>\r\n                </Scroll>\r\n                <Link className=\"add-contact-btn\" to={'/contact/edit'}><i className=\"far fa-plus-square\"></i></Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts,\r\n        user: state.user.currUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts: ContactActions.loadContacts,\r\n    getLoggedUser: UserActions.getLoggedUser,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React, {Component} from 'react';\r\nimport UserActions from '../store/user/UserActions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass signUpPage extends Component {\r\n    state = {\r\n        user: ''\r\n    }\r\n    saveUser = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.signUp(Object.values(this.state.user)[0])\r\n        this.props.history.push('/')\r\n    }\r\n    updateUser = (ev, field) => {\r\n        const {value} = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                user: {\r\n                    ...prevState.user,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <section className=\"signup-container container\">\r\n                <h1><span className=\"welcome-txt\">Welcome</span> MR. BitCoin</h1>\r\n                <form onSubmit= {this.saveUser} className=\"form-container\">\r\n                    <label> <h3>Enter your name</h3>\r\n                        <br/>\r\n                    <input type=\"text\" onChange ={this.updateUser} required/>\r\n                    </label>\r\n                    <button>Sign Up</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signUp: UserActions.signUp,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(signUpPage)","import React, {Component} from 'react';\r\n\r\nexport default class TransferFund extends Component {\r\n    state = {\r\n         amount : [],\r\n         msg:null\r\n    }\r\n    onInputChange = (value) => {\r\n        if(value > this.props.maxCoins){\r\n            this.setState({msg:'Your max coins to transfer: '+this.props.maxCoins})\r\n            this.setState({amount:value});\r\n        } else{\r\n            this.setState({msg:null})\r\n            this.setState({amount:value});\r\n        }\r\n    }\r\n    onUserSend = (ev) => {\r\n        ev.preventDefault()\r\n        const {amount} = this.state\r\n        if (amount <= this.props.maxCoins &&\r\n            amount.length !== 0 &&\r\n            +amount !== 0){\r\n            this.props.onTransferCoins(this.props.contact, amount)\r\n            this.setState({msg:`Transfer succeed!. You have ${this.props.maxCoins-amount} coins left`})\r\n            setTimeout(()=> this.setState({msg:''}) ,2500)\r\n        } else {\r\n            this.setState({msg:'Transfer failed! Enter a valid number'})\r\n            setTimeout(()=> this.setState({msg:''}),2200)\r\n        }\r\n        setTimeout(()=>this.inputAmount.value = \"\",1000)\r\n    }\r\n    render(){\r\n        const {contact} = this.props\r\n        const {msg} = this.state\r\n        return(\r\n            <section className=\"transfer-fund\">\r\n                <form ref=\"form\" onSubmit = {this.onUserSend}>\r\n                    <h4>Transfer coins to <span className=\"trans-to-name\">{contact.name}</span></h4>\r\n                    {msg && <div className=\"msg\">{this.state.msg}</div>}\r\n                    <div className=\"input-container\">\r\n                    <input type=\"number\"\r\n                    className=\"trans-input\" \r\n                    placeholder=\"Enter amount you want\"\r\n                    onChange = {ev => this.onInputChange(ev.target.value)}\r\n                    ref={el => this.inputAmount = el}/>\r\n                    <button type=\"submit\">Transfer</button>\r\n                </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}","// import ContactService from '../services/ContactService'\r\nimport React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport TransferFund from '../cmps/TransferFund'\r\nimport MovesList from '../cmps/MovesList'\r\nimport BitCoinService from '../services/BitcoinService';\r\nimport { connect } from 'react-redux'\r\nimport UserService from '../services/UserService';\r\nimport ContactActions from '../store/contact/ContactActions'\r\nimport UserActions from '../store/user/UserActions'\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        // moves: [],\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        await this.props.loadCurrContact(id)\r\n        await this.props.getLoggedUser()//surviving refresh with new contacts\r\n        if(!this.props.user || !this.props.currContact){\r\n            this.props.history.push('/contact')\r\n        } \r\n        try{\r\n            this.setState({btcToUsdRate: await BitCoinService.btcToUsd()})\r\n        } catch(err) {\r\n            console.log('Err: bitcoin rate error '+ err);\r\n        }\r\n    }\r\n    onTransferCoins = async (contact, amount) =>{\r\n        await this.props.addMove(contact, amount)\r\n    }\r\n    moveListFilter = () => {\r\n        return UserService.movesByContact(this.props.currContact._id)\r\n    }\r\n    render() {\r\n        const contact = this.props.currContact\r\n        const user = this.props.user\r\n        return (\r\n            user && contact && \r\n            <section className=\"contact-details-container container\">\r\n                <div className=\"btns-nav-container\">\r\n                    <Link to={'/contact'}>\r\n                    <div className=\"link\"><i className=\"fas fa-arrow-left\"></i></div></Link>\r\n                    <Link to={`edit/${contact._id}`}>\r\n                    <div className=\"link\"><i className=\"fas fa-user-edit\"></i></div></Link>\r\n                </div>\r\n                <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\r\n                <h1>{contact.name}</h1>\r\n                <h3>{contact.phone}</h3>\r\n                <h4>{contact.email}</h4>\r\n                <TransferFund contact={contact} maxCoins={user.coins} onTransferCoins={this.onTransferCoins}/>\r\n                <MovesList title={'Moves History'} moves={this.moveListFilter()} btcToUsdRate={this.state.btcToUsdRate} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user.currUser,\r\n        currContact: state.contact.currContact,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedUser: UserActions.getLoggedUser,\r\n    loadCurrContact: ContactActions.loadCurrContact,\r\n    loadMoves : UserActions.loadMoves,\r\n    addMove : UserActions.addMove\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React, { Component } from 'react';\r\nimport ContactService from '../services/ContactService'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport ContactActions from '../store/contact/ContactActions'\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: {\r\n            name:'',\r\n            phone:'',\r\n            email:''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (id) {\r\n            await this.props.loadCurrContact(id)\r\n            this.setState({contact: this.props.contact})\r\n        } else this.onResetInputs()\r\n        await this.props.loadContacts()//survive refresh for new contacts\r\n    }\r\n    onRemoveContact = async () =>{\r\n        await this.props.removeContact(this.props.match.params)\r\n        this.props.history.push('/contact')\r\n    }\r\n    onResetInputs = () => {\r\n        this.setState({contact: ContactService.getEmptyContact()})\r\n    }\r\n    onInputChange = (ev) => {\r\n        const contact = this.state.contact;\r\n        contact[ev.name] = ev.value;\r\n        this.setState({contact});\r\n    }\r\n    onSaveContact = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.props.history.push('/contact')\r\n    }\r\n    render() {\r\n        const {contact} = this.state;\r\n        return (\r\n            <section className=\"contact-edit-container\">\r\n                <form onSubmit={this.onSaveContact}>\r\n                <div className=\"btns-nav-container\">\r\n                    <Link to={(!contact._id)?'/contact':`/contact/${contact._id}`}>\r\n                    <div className=\"link\"><i className=\"fas fa-arrow-left\"></i></div></Link>\r\n                </div>\r\n                <img src={`https://robohash.org/${contact._id}`} alt=\"\" />\r\n                <input type=\"text\" \r\n                placeholder=\"Name\"\r\n                value={contact.name}\r\n                name='name'\r\n                onChange = {ev => this.onInputChange(ev.target)}\r\n                required/>\r\n                <input type=\"number\" \r\n                placeholder=\"Phone\"\r\n                value={contact.phone}\r\n                name='phone'\r\n                onChange = {ev => this.onInputChange(ev.target)}\r\n                required/>\r\n                <input type=\"email\" \r\n                placeholder=\"E-mail\"\r\n                value={contact.email}\r\n                name='email'\r\n                onChange = {ev => this.onInputChange(ev.target)}\r\n                required/>\r\n                <div className=\"btns-edit-container\">\r\n                    <button type=\"button\" onClick={contact._id? this.onRemoveContact:this.onResetInputs}>\r\n                    {contact._id? 'Delete':'Reset'}</button>\r\n                    <button type=\"submit\" >Save</button>\r\n                </div>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact : ContactActions.loadCurrContact,\r\n    loadContacts : ContactActions.loadContacts,\r\n    removeContact: ContactActions.removeContact,\r\n    saveContact: ContactActions.saveContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from './views/HomePage'\nimport StatisticPage from './cmps/StatisticPage'\nimport ContactPage  from './views/ContactPage'\nimport SignUpPage  from './views/SignUpPage'\nimport ContactDetailsPage from './views/‏‏ContactDetailsPage'\nimport ContactEditPage from './views/ContactEditPage'\n\nfunction Router() {\n  return (\n     <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/signup\" component={SignUpPage}></Route>\n        <Route exact path=\"/contact\" component={ContactPage}></Route>\n        <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage}></Route>\n        <Route exact path=\"/contact/:id\" component={ContactDetailsPage}></Route>\n        <Route exact path=\"/statistic\" component={StatisticPage}></Route>\n     </Switch>\n  );\n}\n\nexport default Router;\n","import React from 'react';\nimport Header from './cmps/Header'\nimport './styles/global.scss';\nimport Router from './Router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Header/>\n       <Router/>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    currUser: null,\r\n    moves:[]\r\n}\r\n\r\nexport default function userReducer(state= INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_USER':\r\n        return {\r\n            ...state,\r\n            currUser: action.user\r\n        }\r\n        case 'GET_MOVES':\r\n        return {\r\n            ...state,\r\n            moves: action.moves\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const INITIAL_STATE = {\r\n    contacts: null,\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.currContact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'REMOVE_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: null\r\n            }\r\n        case 'UPDATE_CONTACTS':\r\n            const idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport UserReducer from './user/UserReducers'\nimport ContactReducer from './contact/ContactReducers'\n\nconst rootReducer = combineReducers({\n    user: UserReducer,\n    contact: ContactReducer\n})\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk))\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconsole.log('enter service worker');\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      console.log('ofer service worker url:',swUrl);\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration oferrrr:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport App from './App';\nimport Store from './store/Store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\n\nReactDOM.render(\n    <Provider store={Store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    console.log('beforeinstallprompt event has fired')\n    e.prompt()\n});\n"],"sourceRoot":""}